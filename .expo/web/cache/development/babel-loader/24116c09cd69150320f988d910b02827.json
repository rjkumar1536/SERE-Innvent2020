{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\I354770\\\\Desktop\\\\Innvent\\\\Innvent-2020\\\\Innvent-2020\\\\screens\\\\HealthDashboard.js\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nvar screenWidth = Dimensions.get(\"window\").width;\nvar tableHead = ['KPIs', 'Exacavator', 'ForkLifter', 'Loader', 'Crane', 'Road Roller'];\nvar widthArr = [150, 120, 120, 120, 120, 120];\nvar tableData = [['DRIVE TIME', '235:14:25', '178:15:47', '180:18:56', '567:28:36', '400:56:45'], ['Pending HOS', '4', '3', '5', '12', '14'], ['DISTANCE TRAVELED', '58.16 Miles', '4.23 Miles', '24.77 Miles', '90.00 Miles', '78.67 Miles'], ['IDLING', '67:35:47', '45:77:23', '13:33:12', '07:00:00', '01:09:17'], ['SPEEDING', '33 Incidents', '14 Incidents', '88 Incidents', '1800 Incidents', '800 Incidents'], ['HARD BREAKING', '56 Incidents', '110 Incidents', '23 Incidents', '39 Incidents', '11 Incidents'], ['ACCELERATION', '28 Incidents', '67 Incidents', '78 Incidents', '170 Incidents', '33 Incidents'], ['Fuel Economy', '8 Litre/Hour', '15 Litre/Hour', '7 Litre/Hour', '8 Litre/Hour', '2 Litre/Hour'], ['Engine Efficiency', '58%', '67%', '34%', '66%', '45%']];\nvar data = [{\n  name: \"Seoul\",\n  population: 21500000,\n  color: \"rgba(131, 167, 234, 1)\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Toronto\",\n  population: 2800000,\n  color: \"#F00\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Beijing\",\n  population: 527612,\n  color: \"red\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"New York\",\n  population: 8538000,\n  color: \"#ffffff\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Moscow\",\n  population: 11920000,\n  color: \"rgb(0, 0, 255)\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}];\nvar chartConfig = {\n  backgroundGradientFrom: \"#1E2923\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"#08130D\",\n  backgroundGradientToOpacity: 0.5,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(26, 255, 146, \" + opacity + \")\";\n  },\n  strokeWidth: 2,\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false\n};\n\nvar HealthDashboard = function HealthDashboard(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(Table, {\n    borderStyle: {\n      borderWidth: 1,\n      borderColor: '#C1C0B9'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, React.createElement(Row, {\n    data: tableHead,\n    widthArr: widthArr,\n    style: styles.header,\n    textStyle: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), React.createElement(Table, {\n    borderStyle: {\n      borderWidth: 1,\n      borderColor: '#C1C0B9'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, tableData.map(function (rowData, index) {\n    return React.createElement(Row, {\n      key: index,\n      data: rowData,\n      widthArr: widthArr,\n      style: [styles.row, index % 2 && {\n        backgroundColor: '#F7F6E7'\n      }],\n      textStyle: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    });\n  }))), React.createElement(View, {\n    style: styles.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 30,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Total Revenue : \"), React.createElement(LineChart, {\n    data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n      datasets: [{\n        data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n      }]\n    },\n    width: 600,\n    height: 220,\n    yAxisLabel: \"$\",\n    yAxisSuffix: \"k\",\n    yAxisInterval: 1,\n    chartConfig: {\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#ffa726\"\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), React.createElement(PieChart, {\n    data: data,\n    width: screenWidth,\n    height: 220,\n    chartConfig: chartConfig,\n    accessor: \"population\",\n    backgroundColor: \"transparent\",\n    paddingLeft: \"15\",\n    absolute: true,\n    inner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default HealthDashboard;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    height: 50,\n    backgroundColor: '#537791'\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: '100'\n  },\n  dataWrapper: {\n    marginTop: -1\n  },\n  row: {\n    height: 40,\n    backgroundColor: '#E7E6E1'\n  },\n  table: {\n    width: {\n      screenWidth: screenWidth\n    },\n    margin: 'auto'\n  },\n  line: {\n    width: 600,\n    margin: 'auto',\n    marginTop: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/I354770/Desktop/Innvent/Innvent-2020/Innvent-2020/screens/HealthDashboard.js"],"names":["LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","Table","TableWrapper","Row","Rows","Col","Cols","Cell","React","screenWidth","Dimensions","get","width","tableHead","widthArr","tableData","data","name","population","color","legendFontColor","legendFontSize","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","HealthDashboard","navigation","styles","container","table","borderWidth","borderColor","header","text","map","rowData","index","row","backgroundColor","line","fontWeight","fontSize","marginBottom","labels","datasets","Math","random","decimalPlaces","labelColor","style","borderRadius","propsForDots","r","stroke","marginVertical","StyleSheet","create","flex","padding","paddingTop","alignItems","justifyContent","height","textAlign","dataWrapper","marginTop","margin"],"mappings":"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","sourcesContent":["import {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n  import { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\r\n  import React from 'react';\r\n  import {View, Text, StyleSheet, Dimensions, Image, ScrollView } from 'react-native';\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n  const tableHead =  ['KPIs', 'Exacavator', 'ForkLifter', 'Loader', 'Crane', 'Road Roller']\r\n  const widthArr =  [150, 120, 120, 120, 120,120];\r\n  const tableData = [['DRIVE TIME', '235:14:25', '178:15:47', '180:18:56','567:28:36','400:56:45'],\r\n                     ['Pending HOS', '4', '3', '5', '12', '14' ],\r\n                     ['DISTANCE TRAVELED', '58.16 Miles', '4.23 Miles', '24.77 Miles', '90.00 Miles', '78.67 Miles'],\r\n                     ['IDLING', '67:35:47','45:77:23', '13:33:12', '07:00:00', '01:09:17'],\r\n                     ['SPEEDING', '33 Incidents', '14 Incidents', '88 Incidents', '1800 Incidents', '800 Incidents'],\r\n                     ['HARD BREAKING', '56 Incidents', '110 Incidents', '23 Incidents', '39 Incidents', '11 Incidents'],\r\n                     ['ACCELERATION', '28 Incidents', '67 Incidents', '78 Incidents', '170 Incidents', '33 Incidents'],\r\n                     ['Fuel Economy', '8 Litre/Hour', '15 Litre/Hour', '7 Litre/Hour', '8 Litre/Hour', '2 Litre/Hour'],\r\n                     ['Engine Efficiency', '58%', '67%','34%', '66%', '45%']\r\n                    ]\r\n\r\n  const data = [\r\n    {\r\n      name: \"Seoul\",\r\n      population: 21500000,\r\n      color: \"rgba(131, 167, 234, 1)\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Toronto\",\r\n      population: 2800000,\r\n      color: \"#F00\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Beijing\",\r\n      population: 527612,\r\n      color: \"red\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"New York\",\r\n      population: 8538000,\r\n      color: \"#ffffff\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Moscow\",\r\n      population: 11920000,\r\n      color: \"rgb(0, 0, 255)\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    }\r\n  ];\r\n\r\n  const chartConfig = {\r\n    backgroundGradientFrom: \"#1E2923\",\r\n    backgroundGradientFromOpacity: 0,\r\n    backgroundGradientTo: \"#08130D\",\r\n    backgroundGradientToOpacity: 0.5,\r\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n    strokeWidth: 2, // optional, default 3\r\n    barPercentage: 0.5,\r\n    useShadowColorFromDataset: false // optional\r\n  };\r\n\r\n  const HealthDashboard = ({navigation})=>{\r\n      return (\r\n        <View style={styles.container}>\r\n        <ScrollView>\r\n            <View style = {styles.table}>\r\n                <Table borderStyle={{borderWidth: 1, borderColor: '#C1C0B9'}}>\r\n                <Row data={tableHead} widthArr={widthArr} style={styles.header} textStyle={styles.text}/>\r\n                </Table>\r\n                <Table borderStyle={{borderWidth: 1, borderColor: '#C1C0B9'}}>\r\n                    {\r\n                    tableData.map((rowData, index) => (\r\n                        <Row\r\n                        key={index}\r\n                        data={rowData}\r\n                        widthArr={widthArr}\r\n                        style={[styles.row, index%2 && {backgroundColor: '#F7F6E7'}]}\r\n                        textStyle={styles.text}\r\n                        />\r\n                    ))\r\n                    }\r\n                </Table>\r\n            </View>\r\n        <View style = {styles.line}> \r\n            <Text style = {{fontWeight : 'bold', fontSize : 30, marginBottom: 10}}>Total Revenue : </Text>\r\n            <LineChart\r\n            data={{\r\n                labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n                datasets: [\r\n                {\r\n                    data: [\r\n                    Math.random() * 100,\r\n                    Math.random() * 100,\r\n                    Math.random() * 100,\r\n                    Math.random() * 100,\r\n                    Math.random() * 100,\r\n                    Math.random() * 100\r\n                    ]\r\n                }\r\n                ]\r\n            }}\r\n            width={600} // from react-native\r\n            height={220}\r\n            yAxisLabel=\"$\"\r\n            yAxisSuffix=\"k\"\r\n            yAxisInterval={1} // optional, defaults to 1\r\n            chartConfig={{\r\n                decimalPlaces: 2, // optional, defaults to 2dp\r\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                style: {\r\n                borderRadius: 16\r\n                },\r\n                propsForDots: {\r\n                r: \"6\",\r\n                strokeWidth: \"2\",\r\n                stroke: \"#ffa726\"\r\n                }\r\n            }}\r\n            bezier\r\n            style={{\r\n                marginVertical: 8,\r\n                borderRadius: 16\r\n            }}\r\n            />\r\n        </View>\r\n        <PieChart\r\n            data={data}\r\n            width={screenWidth}\r\n            height={220}\r\n            chartConfig={chartConfig}\r\n            accessor=\"population\"\r\n            backgroundColor=\"transparent\"\r\n            paddingLeft=\"15\"\r\n            absolute\r\n            inner\r\n            />\r\n          </ScrollView>\r\n      </View>\r\n      )\r\n    }\r\n\r\n  export default HealthDashboard;\r\n\r\n  const styles = StyleSheet.create({\r\n    container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff', alignItems: 'center', justifyContent : 'center' },\r\n    header: { height: 50, backgroundColor: '#537791' },\r\n    text: { textAlign: 'center', fontWeight: '100' },\r\n    dataWrapper: { marginTop: -1 },\r\n    row: { height: 40, backgroundColor: '#E7E6E1' },\r\n    table : {width:{screenWidth}, margin : 'auto'},\r\n    line : {width : 600, margin : 'auto', marginTop : 100}\r\n    \r\n  });"]},"metadata":{},"sourceType":"module"}