{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\I354770\\\\Desktop\\\\Innvent\\\\Innvent-2020\\\\Innvent-2020\\\\screens\\\\HealthDashboard.js\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar screenWidth = Dimensions.get(\"window\").width;\nvar data = [{\n  name: \"Seoul\",\n  population: 21500000,\n  color: \"rgba(131, 167, 234, 1)\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Toronto\",\n  population: 2800000,\n  color: \"#F00\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Beijing\",\n  population: 527612,\n  color: \"red\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"New York\",\n  population: 8538000,\n  color: \"#ffffff\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Moscow\",\n  population: 11920000,\n  color: \"rgb(0, 0, 255)\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}];\nvar chartConfig = {\n  backgroundGradientFrom: \"#1E2923\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"#08130D\",\n  backgroundGradientToOpacity: 0.5,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(26, 255, 146, \" + opacity + \")\";\n  },\n  strokeWidth: 2,\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false\n};\n\nvar HealthDashboard = function HealthDashboard(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(LineChart, {\n    data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n      datasets: [{\n        data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n      }]\n    },\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    yAxisLabel: \"$\",\n    yAxisSuffix: \"k\",\n    yAxisInterval: 1,\n    chartConfig: {\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#ffa726\"\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(PieChart, {\n    data: data,\n    width: screenWidth,\n    height: 220,\n    chartConfig: chartConfig,\n    accessor: \"population\",\n    backgroundColor: \"transparent\",\n    paddingLeft: \"15\",\n    absolute: true,\n    inner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default HealthDashboard;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 1050\n  },\n  gauge: {\n    position: 'absolute',\n    width: 100,\n    height: 160,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  gaugeText: {\n    backgroundColor: 'transparent',\n    color: '#000',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["C:/Users/I354770/Desktop/Innvent/Innvent-2020/Innvent-2020/screens/HealthDashboard.js"],"names":["LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","React","screenWidth","Dimensions","get","width","data","name","population","color","legendFontColor","legendFontSize","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","HealthDashboard","navigation","labels","datasets","Math","random","decimalPlaces","labelColor","style","borderRadius","propsForDots","r","stroke","marginVertical","styles","StyleSheet","create","container","alignItems","justifyContent","height","gauge","position","gaugeText","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n  import React from 'react';\r\n  import {View, Text, StyleSheet, Dimensions, Image} from 'react-native';\r\n//   import Pie from 'react-native-pie';\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n  const data = [\r\n    {\r\n      name: \"Seoul\",\r\n      population: 21500000,\r\n      color: \"rgba(131, 167, 234, 1)\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Toronto\",\r\n      population: 2800000,\r\n      color: \"#F00\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Beijing\",\r\n      population: 527612,\r\n      color: \"red\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"New York\",\r\n      population: 8538000,\r\n      color: \"#ffffff\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Moscow\",\r\n      population: 11920000,\r\n      color: \"rgb(0, 0, 255)\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    }\r\n  ];\r\n\r\n  const chartConfig = {\r\n    backgroundGradientFrom: \"#1E2923\",\r\n    backgroundGradientFromOpacity: 0,\r\n    backgroundGradientTo: \"#08130D\",\r\n    backgroundGradientToOpacity: 0.5,\r\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n    strokeWidth: 2, // optional, default 3\r\n    barPercentage: 0.5,\r\n    useShadowColorFromDataset: false // optional\r\n  };\r\n\r\n  const HealthDashboard = ({navigation})=>{\r\n      return (\r\n        <View>\r\n        <LineChart\r\n          data={{\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100\r\n                ]\r\n              }\r\n            ]\r\n          }}\r\n          width={Dimensions.get(\"window\").width} // from react-native\r\n          height={220}\r\n          yAxisLabel=\"$\"\r\n          yAxisSuffix=\"k\"\r\n          yAxisInterval={1} // optional, defaults to 1\r\n          chartConfig={{\r\n            // backgroundColor: \"#e26a00\",\r\n            // backgroundGradientFrom: \"#fb8c00\",\r\n            // backgroundGradientTo: \"#ffa726\",\r\n            decimalPlaces: 2, // optional, defaults to 2dp\r\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            style: {\r\n              borderRadius: 16\r\n            },\r\n            propsForDots: {\r\n              r: \"6\",\r\n              strokeWidth: \"2\",\r\n              stroke: \"#ffa726\"\r\n            }\r\n          }}\r\n          bezier\r\n          style={{\r\n            marginVertical: 8,\r\n            borderRadius: 16\r\n          }}\r\n        />\r\n        <PieChart\r\n            data={data}\r\n            width={screenWidth}\r\n            height={220}\r\n            chartConfig={chartConfig}\r\n            accessor=\"population\"\r\n            backgroundColor=\"transparent\"\r\n            paddingLeft=\"15\"\r\n            absolute\r\n            inner\r\n            />\r\n      </View>\r\n      )\r\n    }\r\n\r\n  export default HealthDashboard;\r\n\r\n  const styles = StyleSheet.create({\r\n    container: { alignItems: 'center', justifyContent: 'center', height: 1050 },\r\n    gauge: {\r\n      position: 'absolute',\r\n      width: 100,\r\n      height: 160,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    gaugeText: {\r\n      backgroundColor: 'transparent',\r\n      color: '#000',\r\n      fontSize: 24,\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}