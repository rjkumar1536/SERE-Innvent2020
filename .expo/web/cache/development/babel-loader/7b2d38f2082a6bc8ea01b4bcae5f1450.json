{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\I354770\\\\Desktop\\\\Innvent\\\\Innvent-2020\\\\Innvent-2020\\\\screens\\\\HealthDashboard.js\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar screenWidth = Dimensions.get(\"window\").width;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pie from 'react-native-pie';\nvar data = [{\n  name: \"Seoul\",\n  population: 21500000,\n  color: \"rgba(131, 167, 234, 1)\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Toronto\",\n  population: 2800000,\n  color: \"#F00\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Beijing\",\n  population: 527612,\n  color: \"red\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"New York\",\n  population: 8538000,\n  color: \"#ffffff\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}, {\n  name: \"Moscow\",\n  population: 11920000,\n  color: \"rgb(0, 0, 255)\",\n  legendFontColor: \"#7F7F7F\",\n  legendFontSize: 15\n}];\nvar chartConfig = {\n  backgroundGradientFrom: \"#1E2923\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"#08130D\",\n  backgroundGradientToOpacity: 0.5,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(26, 255, 146, \" + opacity + \")\";\n  },\n  strokeWidth: 2,\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false\n};\n\nvar HealthDashboard = function HealthDashboard(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(LineChart, {\n    data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n      datasets: [{\n        data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n      }]\n    },\n    width: Dimensions.get(\"window\").width,\n    height: 220,\n    yAxisLabel: \"$\",\n    yAxisSuffix: \"k\",\n    yAxisInterval: 1,\n    chartConfig: {\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: \"6\",\n        strokeWidth: \"2\",\n        stroke: \"#ffa726\"\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(PieChart, {\n    data: data,\n    width: screenWidth,\n    height: 220,\n    chartConfig: chartConfig,\n    accessor: \"population\",\n    backgroundColor: \"transparent\",\n    paddingLeft: \"15\",\n    absolute: true,\n    inner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      flexDirection: 'row',\n      width: 350,\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(Pie, {\n    radius: 80,\n    sections: [{\n      percentage: 10,\n      color: '#C70039'\n    }, {\n      percentage: 20,\n      color: '#44CD40'\n    }, {\n      percentage: 30,\n      color: '#404FCD'\n    }, {\n      percentage: 40,\n      color: '#EBD22F'\n    }],\n    strokeCap: 'butt',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), React.createElement(Pie, {\n    radius: 80,\n    innerRadius: 50,\n    sections: [{\n      percentage: 10,\n      color: '#C70039'\n    }, {\n      percentage: 20,\n      color: '#44CD40'\n    }, {\n      percentage: 30,\n      color: '#404FCD'\n    }, {\n      percentage: 40,\n      color: '#EBD22F'\n    }],\n    strokeCap: 'butt',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      flexDirection: 'row',\n      width: 350,\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, React.createElement(Pie, {\n    radius: 80,\n    innerRadius: 60,\n    sections: [{\n      percentage: 10,\n      color: '#C70039'\n    }, {\n      percentage: 20,\n      color: '#44CD40'\n    }, {\n      percentage: 30,\n      color: '#404FCD'\n    }, {\n      percentage: 40,\n      color: '#EBD22F'\n    }],\n    dividerSize: 4,\n    strokeCap: 'round',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), React.createElement(Pie, {\n    radius: 80,\n    innerRadius: 60,\n    sections: [{\n      percentage: 10,\n      color: '#C70039'\n    }, {\n      percentage: 20,\n      color: '#44CD40'\n    }, {\n      percentage: 30,\n      color: '#404FCD'\n    }, {\n      percentage: 40,\n      color: '#EBD22F'\n    }],\n    dividerSize: 6,\n    strokeCap: 'butt',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      width: 350,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, React.createElement(Pie, {\n    radius: 80,\n    sections: [{\n      percentage: 10,\n      color: '#C70039'\n    }, {\n      percentage: 20,\n      color: '#44CD40'\n    }, {\n      percentage: 30,\n      color: '#404FCD'\n    }, {\n      percentage: 40,\n      color: '#EBD22F'\n    }],\n    dividerSize: 6,\n    strokeCap: 'butt',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      width: 175,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, React.createElement(Pie, {\n    radius: 80,\n    innerRadius: 75,\n    sections: [{\n      percentage: 60,\n      color: '#f00'\n    }],\n    backgroundColor: \"#ddd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: styles.gauge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.gaugeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, \"60%\")))));\n};\n\nexport default HealthDashboard;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 1050\n  },\n  gauge: {\n    position: 'absolute',\n    width: 100,\n    height: 160,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  gaugeText: {\n    backgroundColor: 'transparent',\n    color: '#000',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["C:/Users/I354770/Desktop/Innvent/Innvent-2020/Innvent-2020/screens/HealthDashboard.js"],"names":["LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","screenWidth","Dimensions","get","width","React","Pie","data","name","population","color","legendFontColor","legendFontSize","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","HealthDashboard","navigation","labels","datasets","Math","random","decimalPlaces","labelColor","style","borderRadius","propsForDots","r","stroke","marginVertical","paddingVertical","flexDirection","justifyContent","percentage","alignItems","styles","gauge","gaugeText","StyleSheet","create","container","height","position","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\nimport { Dimensions, Image, StyleSheet } from \"react-native\";\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\n  import React from 'react';\r\n  import {View, Text} from 'react-native';\r\n  import Pie from 'react-native-pie';\r\n\r\n  const data = [\r\n    {\r\n      name: \"Seoul\",\r\n      population: 21500000,\r\n      color: \"rgba(131, 167, 234, 1)\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Toronto\",\r\n      population: 2800000,\r\n      color: \"#F00\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Beijing\",\r\n      population: 527612,\r\n      color: \"red\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"New York\",\r\n      population: 8538000,\r\n      color: \"#ffffff\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    },\r\n    {\r\n      name: \"Moscow\",\r\n      population: 11920000,\r\n      color: \"rgb(0, 0, 255)\",\r\n      legendFontColor: \"#7F7F7F\",\r\n      legendFontSize: 15\r\n    }\r\n  ];\r\n\r\n  const chartConfig = {\r\n    backgroundGradientFrom: \"#1E2923\",\r\n    backgroundGradientFromOpacity: 0,\r\n    backgroundGradientTo: \"#08130D\",\r\n    backgroundGradientToOpacity: 0.5,\r\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n    strokeWidth: 2, // optional, default 3\r\n    barPercentage: 0.5,\r\n    useShadowColorFromDataset: false // optional\r\n  };\r\n\r\n  const HealthDashboard = ({navigation})=>{\r\n      return (\r\n        <View>\r\n        <LineChart\r\n          data={{\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100,\r\n                  Math.random() * 100\r\n                ]\r\n              }\r\n            ]\r\n          }}\r\n          width={Dimensions.get(\"window\").width} // from react-native\r\n          height={220}\r\n          yAxisLabel=\"$\"\r\n          yAxisSuffix=\"k\"\r\n          yAxisInterval={1} // optional, defaults to 1\r\n          chartConfig={{\r\n            // backgroundColor: \"#e26a00\",\r\n            // backgroundGradientFrom: \"#fb8c00\",\r\n            // backgroundGradientTo: \"#ffa726\",\r\n            decimalPlaces: 2, // optional, defaults to 2dp\r\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            style: {\r\n              borderRadius: 16\r\n            },\r\n            propsForDots: {\r\n              r: \"6\",\r\n              strokeWidth: \"2\",\r\n              stroke: \"#ffa726\"\r\n            }\r\n          }}\r\n          bezier\r\n          style={{\r\n            marginVertical: 8,\r\n            borderRadius: 16\r\n          }}\r\n        />\r\n        <PieChart\r\n            data={data}\r\n            width={screenWidth}\r\n            height={220}\r\n            chartConfig={chartConfig}\r\n            accessor=\"population\"\r\n            backgroundColor=\"transparent\"\r\n            paddingLeft=\"15\"\r\n            absolute\r\n            inner\r\n            />\r\n            <View\r\n            style={{\r\n              paddingVertical: 15,\r\n              flexDirection: 'row',\r\n              width: 350,\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Pie\r\n              radius={80}\r\n              sections={[\r\n                {\r\n                  percentage: 10,\r\n                  color: '#C70039',\r\n                },\r\n                {\r\n                  percentage: 20,\r\n                  color: '#44CD40',\r\n                },\r\n                {\r\n                  percentage: 30,\r\n                  color: '#404FCD',\r\n                },\r\n                {\r\n                  percentage: 40,\r\n                  color: '#EBD22F',\r\n                },\r\n              ]}\r\n              strokeCap={'butt'}\r\n            />\r\n            <Pie\r\n              radius={80}\r\n              innerRadius={50}\r\n              sections={[\r\n                {\r\n                  percentage: 10,\r\n                  color: '#C70039',\r\n                },\r\n                {\r\n                  percentage: 20,\r\n                  color: '#44CD40',\r\n                },\r\n                {\r\n                  percentage: 30,\r\n                  color: '#404FCD',\r\n                },\r\n                {\r\n                  percentage: 40,\r\n                  color: '#EBD22F',\r\n                },\r\n              ]}\r\n              strokeCap={'butt'}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{\r\n              paddingVertical: 15,\r\n              flexDirection: 'row',\r\n              width: 350,\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Pie\r\n              radius={80}\r\n              innerRadius={60}\r\n              sections={[\r\n                {\r\n                  percentage: 10,\r\n                  color: '#C70039',\r\n                },\r\n                {\r\n                  percentage: 20,\r\n                  color: '#44CD40',\r\n                },\r\n                {\r\n                  percentage: 30,\r\n                  color: '#404FCD',\r\n                },\r\n                {\r\n                  percentage: 40,\r\n                  color: '#EBD22F',\r\n                },\r\n              ]}\r\n              dividerSize={4}\r\n              strokeCap={'round'}\r\n            />\r\n            <Pie\r\n              radius={80}\r\n              innerRadius={60}\r\n              sections={[\r\n                {\r\n                  percentage: 10,\r\n                  color: '#C70039',\r\n                },\r\n                {\r\n                  percentage: 20,\r\n                  color: '#44CD40',\r\n                },\r\n                {\r\n                  percentage: 30,\r\n                  color: '#404FCD',\r\n                },\r\n                {\r\n                  percentage: 40,\r\n                  color: '#EBD22F',\r\n                },\r\n              ]}\r\n              dividerSize={6}\r\n              strokeCap={'butt'}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{\r\n              paddingVertical: 15,\r\n              width: 350,\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Pie\r\n              radius={80}\r\n              sections={[\r\n                {\r\n                  percentage: 10,\r\n                  color: '#C70039',\r\n                },\r\n                {\r\n                  percentage: 20,\r\n                  color: '#44CD40',\r\n                },\r\n                {\r\n                  percentage: 30,\r\n                  color: '#404FCD',\r\n                },\r\n                {\r\n                  percentage: 40,\r\n                  color: '#EBD22F',\r\n                },\r\n              ]}\r\n              dividerSize={6}\r\n              strokeCap={'butt'}\r\n            />\r\n            <View style={{ width: 175, alignItems: 'center' }}>\r\n              <Pie\r\n                radius={80}\r\n                innerRadius={75}\r\n                sections={[\r\n                  {\r\n                    percentage: 60,\r\n                    color: '#f00',\r\n                  },\r\n                ]}\r\n                backgroundColor=\"#ddd\"\r\n              />\r\n              <View\r\n                style={styles.gauge}\r\n              >\r\n                <Text\r\n                  style={styles.gaugeText}\r\n                >\r\n                  60%\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n      </View>\r\n      )\r\n    }\r\n\r\n  export default HealthDashboard;\r\n\r\n  const styles = StyleSheet.create({\r\n    container: { alignItems: 'center', justifyContent: 'center', height: 1050 },\r\n    gauge: {\r\n      position: 'absolute',\r\n      width: 100,\r\n      height: 160,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    gaugeText: {\r\n      backgroundColor: 'transparent',\r\n      color: '#000',\r\n      fontSize: 24,\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}